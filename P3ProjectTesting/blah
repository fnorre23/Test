# Function to handle the state of capturing the first gesture
#def state_capture_gesture1(raw_frame):

    # Display instructions on the frame
    frame = displayText(raw_frame.copy(), 'Press "s" to save the image, "q" to quit')
    cv2.imshow('Video Feed', frame)  # Show the frame in the 'Video Feed' window

    if key == ord('s'):  # If 's' key is pressed
        getBinaryImage(raw_frame, 'gesture1')  # Save the image as 'gesture1'
        return 'capture_gesture2'  # Transition to the next state
    
    return 'capture_gesture1'  # Remain in the current state

# Function to handle the state of capturing the second gesture
#def state_capture_gesture2(raw_frame):

    # Display instructions on the frame
    frame = displayText(raw_frame.copy(), 'Press "q" to quit')
    cv2.imshow('Video Feed', frame)  # Show the frame in the 'Video Feed' window

    if key == ord('s'):  # If 's' key is pressed
        getBinaryImage(raw_frame, 'gesture2')  # Save the image as 'gesture2'
        return 'process_gestures'  # Transition to the next state

    return 'capture_gesture2'  # Remain in the current state


def state_match_gesture(raw_frame):

    # Load the global variables
    global contours1, contours2, contours

    # Lappel√∏sning for nu
    contours1 = contours[1]
    contours2 = contours[2]

    # Display instructions on the frame
    frame = displayText(raw_frame.copy(), '')
    binary_frame = getBinaryVideo(raw_frame)  # Convert the frame to binary

    # Find the contours in the binary frame
    contoursLive, _ = cv2.findContours(binary_frame, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)

    # Set the contours to compare the gestures with the live feed
    match_gesture1 = round(cv2.matchShapes(contoursLive[0], contours1[0], 1, 0.0), 2)
    match_gesture2 = round(cv2.matchShapes(contoursLive[0], contours2[0], 1, 0.0), 2)

    displayMatchAccuracy(frame, match_gesture1)  # Display the match accuracy on the frame

    # If the match is above a certain threshold, display a match message
    if match_gesture1 < 0.2:
        frame = displayText(frame, 'Gesture1')
    elif match_gesture2 < 0.2:
        frame = displayText(frame, 'Gesture2')
    else:
        frame = displayText(frame, 'No gesture')

    # Show the frames in the respective windows
    cv2.imshow('Video Feed', frame)
    cv2.imshow('Binary Frame', binary_frame)

    return 'match_gesture'  # Remain in the current state